

// todo add constant variable and unit type they can be anywere in file
// strict order 
Contract = (ImportDirective* ImplementsDirective* StructDefinition* ExternalInterfaces* ContractDefinition) 

// could be  declared in any point of file once
UnitsDefinition = 'units' '{'
     (Identifier ':' StringLiteral ',')*
     (Identifier ':' StringLiteral) {0,1}
'}'


// USER-define constants

//

//import
ImportDirective = 'import' StringLiteral 'as' Identifier
                | 'from'   StringLiteral 'import' Identifier

// implelents statements
ImplementsDirective =  'implements:' Identifier

//structs
StructDefinition = 'struct' Identifier ':'
    (VariableDeclaration ',')*
    (VariableDeclaration    ) {0,1}

// external interfaces
ExternalInterfaces = 'contract' Identifier ':'
       ( 'def' Identifier '(' FunctionArg* (LastFunctionArg){0,1} ')' ('->' Type)? ':' (modifying|constant) ',' )*
       ( 'def' Identifier '(' FunctionArg* (LastFunctionArg){0,1} ')' ('->' Type)? ':' (modifying|constant)     )  {0,1}
FunctionArg = Identifier ':' BaseType ','
LastFunctionArg = Identifier ':' BaseType

// also strict order
ContractDefinition = EventDeclaration* VariableDeclaration* FunctionDeclaration*

EventDeclaration = Identifier ':' 'event' '(' '{'  EventProperty* LastEventProperty{0,1} '}' ')'

EventProperty = Identifier ':' ValueType ','
LastEventProperty = Identifier ':' ValueType

// VariableDeclarationExpression below this
VariableDeclaration = VariableDeclarationExpression


// TYPES
TYPE = ValueType | UnitType | ReferenceType

UnitType =  CustomUnitType  | Timestamp | Timedelta | Wei
CustomUnitType = (Number) '(' Identifier ')'
Timestamp = 'timestamp'
Timedelta = 'timedelta'
Wei = 'wei'

ValueType = BoolType | NumberType | AddressType | UnitTypeType | Byte32Type | BytesType | StringType

BoolType = 'bool'
NumberType = 'uint256' | 'int128' | 'decimal'
AddressType = 'address'
Byte32Type = 'byte32'
BytesType = 'bytes'   '[' (DecimalNumber | Identifier) ']'
StringType = 'string' '[' (DecimalNumber | Identifier) ']'

ReferenceType = ListType | StructType | MapType
ListType = ValueType '[' (DecimalNumber | Identifier) ']'
StructType = Identifier
MapType = 'map' '(' ValueType  ',' (ValueType | ReferenceType ')'


// IDENTIFIER
Identifier = [a-zA-Z_$] [a-zA-Z_$0-9]*

// LITERALS
BooleanLiteral = 'True' | 'False'
AddressLiteral = HexNumber
StringLiteral = '"' ([^"\r\n\\] | '\\' .)* '"'
NumberLiteral = HexNumber | DecimalNumber  
DecimalNumber = [0-9]+ ( '.' [0-9]* )? ( [eE] [0-9]+ )?
HexNumber = '0' [xX] [0-9a-fA-F]+

//Builtin Constants
Constants = 'ZERO_ADDRESS' | 'EMPTY_BYTES32' | 'MAX_INT128' | 'MIN_INT128' | 'MAX_DECIMAL' | 'MIN_DECIMAL' | 'MAX_UINT256'

// expression parts
// todo

 

//Statement = IfStatement | ForStatement | Block | Continue | Break | Return | Raise | EmitStatement | SimpleStatement )


